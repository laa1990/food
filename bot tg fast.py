import logging
import sqlite3
import aiogram
from aiogram import types, Dispatcher
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from aiogram.types import KeyboardButton, ReplyKeyboardMarkup
from aiogram.utils import executor

from data import FOODLIST
from gigachat import get_chat_completion, get_token, auth

conn = sqlite3.connect("database.db")
cursor = conn.cursor()

logging.basicConfig(level=logging.INFO)

bot = aiogram.Bot(token="")
storage = MemoryStorage()
dp = Dispatcher(bot, storage=storage)

btnlist = [KeyboardButton(i) for i in FOODLIST]
foodlistmenu = ReplyKeyboardMarkup(resize_keyboard=True).add(*btnlist)
sogl_keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)


@dp.message_handler(commands=["start", "get_a_recipe"])
async def start(message: types.Message):
    user_id = message.from_user.id
    result = cursor.execute(f"SELECT * FROM user WHERE user_id={user_id}").fetchall()
    if not result:
        res = "INSERT INTO user (user_id) VALUES (" + str(user_id) + ")"
        cursor.execute(res)
        conn.commit()

    if message.text == "/start":
        await bot.send_message(message.from_user.id, "–≠—Ç–æ –±–æ—Ç –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ä–µ—Ü–µ–ø—Ç–æ–≤ –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤."
                                                     "\n–í—ã–±–µ—Ä–∏ –ø—Ä–æ–¥—É–∫—Ç—ã –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞ "
                                                     "–∏–ª–∏ –≤–≤–µ–¥–∏ —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ:",
                               reply_markup=foodlistmenu)
        MESS = bot.send_message(message.from_user.id,
                                f"–°–ø–∏—Å–æ–∫ –ø—É—Å—Ç–æ–π\n\n/get_a_recipe - –ø–æ–ª—É—á–∏—Ç—å —Ä–µ—Ü–µ–ø—Ç\n"
                                f"/start - –ø–µ—Ä–µ–π—Ç–∏ –≤ –Ω–∞—á–∞–ª–æ –∏ –æ—á–∏—Å—Ç–∏—Ç—å —Å–ø–∏—Å–æ–∫".replace('üçî', "\n"))
        MESS = await MESS
        res = "UPDATE user SET mes_list_id= " + str(MESS.message_id) + " WHERE user_id = " + str(message.from_user.id)
        t = "DELETE FROM lists_of_food WHERE user_id=" + str(message.from_user.id)
        cursor.execute(t)
        cursor.execute(res)
        conn.commit()
    elif message.text == "/help":
        pass
    elif message.text == "/get_a_recipe":
        res = cursor.execute(f"SELECT list_of_food FROM lists_of_food "
                             f"WHERE user_id={str(message.from_user.id)}").fetchall()
        tempmass = [i[0] for i in res]
        if tempmass:
            TOKEN = get_token(auth)["access_token"]
            ans = get_chat_completion(TOKEN, f"–ü—Ä–∏–¥—É–º–∞–π –∏–ª–∏ –Ω–∞–π–¥–∏ —Ä–µ—Ü–µ–ø—Ç –û–î–ò–ù –†–ï–¶–ï–ü–¢, –ø—Ä–∏—á–µ–º —Ç–æ–ª—å–∫–æ"
                                             f" —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –≤ –∏–Ω–≥—Ä–∏–¥–∏–µ–Ω—Ç–∞—Ö –¢–û–õ–¨–ö–û –°–õ–ï–î–£–Æ–©–ò–• "
                                             f"–ø—Ä–æ–¥—É–∫—Ç–æ–≤: {', '.join(tempmass)}. –ù–µ –∏—Å–ø–æ–ª—å–∑—É–π –¥—Ä—É–≥–∏–µ –ø—Ä–æ–¥—É–∫—Ç—ã. "
                                             f"–ü–∏—à–∏ –∫–æ—Ä–æ—á–µ").json()[
                'choices'][0]['message']['content']
            t = "DELETE FROM lists_of_food WHERE user_id=" + str(message.from_user.id)
            cursor.execute(t)
            conn.commit()
            await bot.send_message(message.from_user.id, ans)
            await bot.send_message(message.from_user.id,
                                   "/start - –ø–µ—Ä–µ–π—Ç–∏ –≤ –Ω–∞—á–∞–ª–æ",
                                   reply_markup=types.ReplyKeyboardRemove())
        else:
            MESS = bot.send_message(message.from_user.id,
                                    f"–°–ø–∏—Å–æ–∫ –ø—É—Å—Ç–æ–π\n\n/get_a_recipe - –ø–æ–ª—É—á–∏—Ç—å —Ä–µ—Ü–µ–ø—Ç\n"
                                    f"/start - –ø–µ—Ä–µ–π—Ç–∏ –≤ –Ω–∞—á–∞–ª–æ –∏ –æ—á–∏—Å—Ç–∏—Ç—å —Å–ø–∏—Å–æ–∫".replace('üçî', "\n"))
            MESS = await MESS
            res = "UPDATE user SET mes_list_id= " + str(MESS.message_id) + " WHERE user_id = " + str(
                message.from_user.id)
            t = "DELETE FROM lists_of_food WHERE user_id=" + str(message.from_user.id)
            cursor.execute(t)
            cursor.execute(res)
            conn.commit()



@dp.message_handler(lambda message: message.text in FOODLIST)
async def foodlist(message: types.Message):
    res = cursor.execute(f"SELECT list_of_food FROM lists_of_food "
                         f"WHERE user_id={str(message.from_user.id)}").fetchall()
    tempmass = [i[0] for i in res]
    if message.text.lower() in tempmass:
        t = "DELETE FROM lists_of_food WHERE user_id=" + str(message.from_user.id) \
            + " AND list_of_food='" + message.text + "'"
        cursor.execute(t)
        conn.commit()
    else:
        remp = "INSERT INTO lists_of_food (user_id, list_of_food) VALUES ('" + \
               str(message.from_user.id) + "', '" + message.text.lower() + "')"
        cursor.execute(remp)
        conn.commit()
    res = cursor.execute(f"SELECT list_of_food FROM lists_of_food WHERE user_id="
                         f"{str(message.from_user.id)}").fetchall()
    tempmass = [i[0].capitalize() for i in res]
    user_id = message.from_user.id
    message_ids = cursor.execute(f"SELECT mes_list_id FROM user WHERE user_id={user_id}").fetchone()
    message_ids = message_ids[0]
    if tempmass:
        await bot.edit_message_text(f"–°–ø–∏—Å–æ–∫ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤:\n{'üçî'.join(tempmass)}"
                                    f"\n\n–î–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∏–∑ "
                                    f"—Å–ø–∏—Å–∫–∞ –≤–≤–µ–¥–∏ –ø—Ä–æ–¥—É–∫—Ç –∑–∞–Ω–æ–≤–æ\n\n"
                                    f"/get_a_recipe - –ø–æ–ª—É—á–∏—Ç—å —Ä–µ—Ü–µ–ø—Ç\n"
                                    f"/start - –ø–µ—Ä–µ–π—Ç–∏ –≤ –Ω–∞—á–∞–ª–æ –∏ –æ—á–∏—Å—Ç–∏—Ç—å —Å–ø–∏—Å–æ–∫".replace('üçî', "\n"),
                                    message_id=message_ids,
                                    chat_id=message.from_user.id)

    else:
        await bot.edit_message_text(f"–°–ø–∏—Å–æ–∫ –ø—É—Å—Ç, –≤—ã–±–µ—Ä–∏ —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω –ø—Ä–æ–¥—É–∫—Ç\n\n"
                                    f"/get_a_recipe - –ø–æ–ª—É—á–∏—Ç—å —Ä–µ—Ü–µ–ø—Ç\n"
                                    f"/start - –ø–µ—Ä–µ–π—Ç–∏ –≤ –Ω–∞—á–∞–ª–æ –∏ –æ—á–∏—Å—Ç–∏—Ç—å —Å–ø–∏—Å–æ–∫".replace('üçî', "\n"),
                                    message_id=message_ids,
                                    chat_id=message.from_user.id)

    await message.delete()


@dp.message_handler(lambda message: message.text not in FOODLIST)
async def nofoodlist(message: types.Message):
    TOKEN = get_token(auth)["access_token"]
    ans = get_chat_completion(TOKEN, f"–Ø–≤–ª—è–µ—Ç—Å—è –ª–∏ {message.text} —Å—ä–µ–¥–æ–±–Ω—ã–º –ø—Ä–æ–¥—É–∫—Ç–æ–º? –ù–∞–ø–∏—à–∏ –¥–∞ –∏–ª–∏ –Ω–µ—Ç.").json()[
        'choices'][0]['message']['content']
    res = cursor.execute(f"SELECT list_of_food FROM lists_of_food WHERE "
                         f"user_id={str(message.from_user.id)}").fetchall()
    tempmass = [i[0].lower() for i in res]
    if "–¥–∞" in ans.lower():
        if message.text.lower() in tempmass:
            t = "DELETE FROM lists_of_food WHERE user_id=" + str(message.from_user.id) \
                + " AND list_of_food='" + message.text + "'"
            cursor.execute(t)
            conn.commit()
        else:
            remp = "INSERT INTO lists_of_food (user_id, list_of_food) VALUES ('" + \
                   str(message.from_user.id) + "', '" + message.text.lower() + "')"
            cursor.execute(remp)
            conn.commit()
        res = cursor.execute(f"SELECT list_of_food FROM lists_of_food WHERE user_id="
                             f"{str(message.from_user.id)}").fetchall()
        tempmass = [i[0].capitalize() for i in res]
        user_id = message.from_user.id
        message_ids = cursor.execute(f"SELECT mes_list_id FROM user WHERE user_id={user_id}").fetchone()
        message_ids = message_ids[0]
        if tempmass:
            await bot.edit_message_text(f"–°–ø–∏—Å–æ–∫ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤:\n{'üçî'.join(tempmass)}"
                                        f"\n\n–î–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∏–∑ "
                                        f"—Å–ø–∏—Å–∫–∞ –≤–≤–µ–¥–∏ –ø—Ä–æ–¥—É–∫—Ç –∑–∞–Ω–æ–≤–æ\n\n"
                                        f"/get_a_recipe - –ø–æ–ª—É—á–∏—Ç—å —Ä–µ—Ü–µ–ø—Ç\n"
                                        f"/start - –ø–µ—Ä–µ–π—Ç–∏ –≤ –Ω–∞—á–∞–ª–æ –∏ –æ—á–∏—Å—Ç–∏—Ç—å —Å–ø–∏—Å–æ–∫".replace('üçî', "\n"),
                                        message_id=message_ids,
                                        chat_id=message.from_user.id)

        else:
            await bot.edit_message_text(f"–°–ø–∏—Å–æ–∫ –ø—É—Å—Ç, –≤—ã–±–µ—Ä–∏ —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω –ø—Ä–æ–¥—É–∫—Ç\n\n"
                                        f"/get_a_recipe - –ø–æ–ª—É—á–∏—Ç—å —Ä–µ—Ü–µ–ø—Ç\n"
                                        f"/start - –ø–µ—Ä–µ–π—Ç–∏ –≤ –Ω–∞—á–∞–ª–æ –∏ –æ—á–∏—Å—Ç–∏—Ç—å —Å–ø–∏—Å–æ–∫".replace('üçî', "\n"),
                                        message_id=message_ids,
                                        chat_id=message.from_user.id)
        await message.delete()
    else:
        await bot.send_message(message.from_user.id, "–¢–∞–∫–æ–≥–æ –ø—Ä–æ–¥—É–∫—Ç–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
        res = cursor.execute(f"SELECT list_of_food FROM lists_of_food WHERE user_id="
                             f"{str(message.from_user.id)}").fetchall()
        tempmass = [i[0].capitalize() for i in res]

        if tempmass:
            MESS = bot.send_message(message.from_user.id, f"–°–ø–∏—Å–æ–∫ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤:\n{'üçî'.join(tempmass)}"
                                                          f"\n\n–î–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∏–∑ "
                                                          f"—Å–ø–∏—Å–∫–∞ –≤–≤–µ–¥–∏ –ø—Ä–æ–¥—É–∫—Ç –∑–∞–Ω–æ–≤–æ\n\n"
                                                          f"/get_a_recipe - –ø–æ–ª—É—á–∏—Ç—å —Ä–µ—Ü–µ–ø—Ç\n"
                                                          f"/start - –ø–µ—Ä–µ–π—Ç–∏ –≤ –Ω–∞—á–∞–ª–æ –∏ –æ—á–∏—Å—Ç–∏—Ç—å "
                                                          f"—Å–ø–∏—Å–æ–∫".replace('üçî', "\n"))
        else:
            MESS = bot.send_message(message.from_user.id, f"–°–ø–∏—Å–æ–∫ –ø—É—Å—Ç, –≤—ã–±–µ—Ä–∏ —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω –ø—Ä–æ–¥—É–∫—Ç\n\n"
                                                          f"/get_a_recipe - –ø–æ–ª—É—á–∏—Ç—å —Ä–µ—Ü–µ–ø—Ç\n"
                                                          f"/start - –ø–µ—Ä–µ–π—Ç–∏ –≤ –Ω–∞—á–∞–ª–æ –∏ –æ—á–∏—Å—Ç–∏—Ç—å "
                                                          f"—Å–ø–∏—Å–æ–∫".replace('üçî', "\n"))
        user_id = message.from_user.id
        MESS = await MESS
        res = "UPDATE user SET mes_list_id= " + str(MESS.message_id) + \
              " WHERE user_id = " + str(message.from_user.id)
        cursor.execute(res)
        conn.commit()
        await message.delete()


if __name__ == "__main__":
    executor.start_polling(dp, skip_updates=False)
